name: Build and Release

on:
  push:
    tags:
      - 'v*' 

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go_version: [1.17.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go_version }}
      - name: Build app
        run: go build -o CloudSonic -v
      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: Automated release created by GitHub Actions
          draft: false
          prerelease: false
      - name: Upload Windows binary
        uses: actions/upload-artifact@v2
        with:
          name: CloudSonic-Windows-amd64
          path: CloudSonic.exe
          if: matrix.os == 'windows-latest'
      - name: Upload Mac binary
        uses: actions/upload-artifact@v2
        with:
          name: CloudSonic-MacOS-amd64
          path: CloudSonic
          if: matrix.os == 'macos-latest'
      - name: Upload Linux binary
        uses: actions/upload-artifact@v2
        with:
          name: CloudSonic-Linux-amd64
          path: CloudSonic
          if: matrix.os == 'ubuntu-latest'
      - name: Get version from tag
        run: |
          export VERSION=$(echo "${{ github.ref }}" | sed 's/^refs\/tags\///')
          echo "Version: $VERSION"
      - name: Upload versioned binary
        uses: actions/upload-artifact@v2
        with:
          name: CloudSonic-$VERSION-${{ matrix.os }}
          path: CloudSonic
